{"version":3,"sources":["Components/Header/Header.js","Containers/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Link","className","to","React","Component","Home","lead","Math","random","Fragment","href","class","App","Header_Header_Header","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wUAKqBA,mLAEf,OACGC,EAAAC,EAAAC,cAAA,cACGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,OAAOC,GAAG,KAA1B,eACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,QAAQC,GAAG,KAA3B,YACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,QAAQC,GAAG,KAA3B,mBANwBC,IAAMC,WCFrBC,0LAIf,IAAMC,EAAOC,KAAKC,UAAY,GAAM,cAAgB,uBACpD,OACGX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACGZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QAAhB,uBACAJ,EAAAC,EAAAC,cAAA,KAAGW,KAAK,mBAAmBT,UAAU,cAArC,kCAGHJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXK,GAEJT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAf,yDAMHJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,gBAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAf,qEAIAJ,EAAAC,EAAAC,cAAA,OAAKY,MAAM,SAAX,sBAMHd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACZJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,uBAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAf,kFAGAJ,EAAAC,EAAAC,cAAA,OAAKY,MAAM,SAAX,uBAMTd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBApDOE,IAAMC,YCkBzBQ,mLATX,OACEf,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACGZ,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWZ,YALxBD,aCEEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uECTNC,IAASC,OAEH3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACG5B,EAAAC,EAAAC,cAAC2B,EAAD,OAGPC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b513d9aa.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends React.Component {\n   render() {\n      return (\n         <header>\n            <Link className=\"left\" to=\"/\">Dylan Babbs</Link>\n            <Link className=\"right\" to=\"/\">Projects</Link>\n            <Link className=\"right\" to=\"/\">Writing</Link>\n         </header>\n      )\n   }\n}\n","import React from 'react';\nimport './Home.scss';\n\nexport default class Home extends React.Component {\n\n   render() {\n\n      const lead = Math.random() >= 0.5 ? 'Maps + Code' : 'Design + Code + Grow';\n      return (\n         <>\n            <div className=\"banner\">\n               <span className=\"bold\">Hot off the press: </span>\n               <a href=\"https://here.com\" className=\"light-link\">Fighting hunger with chatbots</a>\n            </div>\n\n            <div className=\"mainstage\">\n               <div className=\"lead\">\n                  {lead}\n               </div>\n               <div className=\"sublead\">\n                  Interdisciplinary Technologist based in Seattle, WA.\n               </div>\n\n            </div>\n\n            <div className=\"carousel\">\n               <div className=\"project\">\n                  <div className=\"block\"></div>\n                  <div className=\"title\">\n                     FlightMapper\n                  </div>\n                  <div className=\"subtitle\">\n                     A full stack visualization application to display flight history.\n\n                  </div>\n                  <div class=\"learn\">\n                     Learn More &#8594;\n                  </div>\n\n               </div>\n\n               <div className=\"project\">\n                  <div className=\"block\"></div>\n                     <div className=\"title\">\n                        Social Good Chatbot\n                     </div>\n                     <div className=\"subtitle\">\n                        HERE Technologies and Greater Chicago Food Depository team up to fight hunger.\n                     </div>\n                     <div class=\"learn\">\n                        Learn More &#8594;\n                     </div>\n               </div>\n            </div>\n\n            <div className=\"newsletter\">\n\n            </div>\n         </>\n      )\n   }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route } from \"react-router-dom\";\n\n//Components\nimport Header from './Components/Header/Header';\n\n//Containers\nimport Home from './Containers/Home/Home';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n         <Header />\n         <Route path=\"/\" exact component={Home} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n\nReactDOM.render(\n   (\n      <Router>\n         <App />\n      </Router>\n   )\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}